//This is Reprap Pearce, named after my favorite scientist nowadays Joshua Pearce


//The idea is having a big delta printer at very low build cost that prints ok and looks cool.

//Using double coupled 28buj48 steppers and UnoR3 with CNC-shield should do the trick
//Todo:

//Planetaries
//Peltier blocks on sides of brakepipe as heatbreak
//thread brakepipe in aproximately 20mm
//Domenut hotend with induction heating
//Holes for planetaries
  //  holes for poles-wire

//Input parameters

polelength=1000;
polediameter=10;
buildheigth=2000;
outerradius=500;
ringdia=58;
sunteeth=12;
planetteeth=10;
toothslewrate=0.8;
toothpitch=2;
ringamp=10;
ringfreq=6;
tireprofile=3;
planetscrew=4;
margin=0.1;
layer=0.2;

detail= 30;

planetdia=(ringdia/2-tireprofile*2)*planetteeth/(sunteeth/2+planetteeth);
sundia=(ringdia/2-tireprofile)*sunteeth/(sunteeth/2+planetteeth)-1;
ringteeth=sunteeth*((sunteeth*round(ringdia/planetdia))/sunteeth)-sunteeth;
$fn=detail;
echo("Sun diameter is ");
echo(sundia);
echo("and planet diameter is ");
echo(planetdia);
echo("and ring teeth is ");
echo(ringteeth);

//carriage();


planetaries();

module planetaries(){for(j=[-10:layer:9.5]){
    color("brown")translate([0,0,0.5*j])linear_extrude(layer)difference(){
     rotate([0,0,360/(sunteeth*2)+2*abs(j)-8])gear(sundia,sunteeth); 
        square([3,6],center=true);
    }
    color("yellow")translate([0,0,0.5*j])linear_extrude(layer)for (i=[-120:120:120])
    rotate([0,0,i-35])translate([planetdia/2+sundia/2+0.5,0,0])difference(){
     rotate([0,0,(180/planetteeth)*i-2*abs(j)])gear(planetdia,planetteeth); 
        circle(planetscrew/2);
    }
        color("cyan")translate([0,0,0.5*j])linear_extrude(layer)difference(){
        circle(ringdia/2-tireprofile+0.4);
    rotate([0,0,360/(sunteeth*2)-2*abs(j)-5.3])gear(ringdia-tireprofile*2-toothpitch*1.5+margin,ringteeth);
    }
    
    for(k=[0:1:360]){
        
   color("blue")rotate([0,90,k])translate([0,ringdia/2-tireprofile+layer,0])
        linear_extrude(20*PI/360*3)
        polygon([[1,tireprofile],[5,1+sin(7*k+30)],[5,-0.5],[-5,-0.5],[-5,1+sin(7*k-30)],[-1,tireprofile]]);
    }  
    }
}

module gear(dia,teeth){
   
     for(i=[0:360/teeth:360]){    
    rotate([0,0,i])polygon([[0,0],
         [dia/2-toothpitch/2*2,+dia*PI/(teeth*4)+toothslewrate/2+dia*PI/(teeth*3)],
         [dia/2-toothpitch/2,dia*PI/(teeth*4)+toothslewrate/2-margin],
         [dia/2+toothpitch/2,dia*PI/(teeth*4)-toothslewrate/2-margin],
         [dia/2+toothpitch/2,-dia*PI/(teeth*4)+toothslewrate/2+margin],
         [dia/2-toothpitch/2,-dia*PI/(teeth*4)-toothslewrate/2+margin],
         [dia/2-toothpitch/2*2,-dia*PI/(teeth*4)-toothslewrate/2-dia*PI/(teeth*3)]]);
     }    
    }

module carriage(){
    color("silver")difference(){
        cylinder(10,50,50,center=true);
    cylinder(80,2,2,center=true);
        for (k=[0:120:360]){
        rotate([0,0,k+15])translate([26,26,2])rotate([-30,30,-3])cylinder(40,5,14,center=true);
            rotate([0,0,k])translate([30,0,30])rotate([90,0,0])cylinder(10,30,30,center=true);//room for planetary gear
        }
    //carriage screw holes
        for (m=[0:120:360]){rotate([0,0,m])translate([30,-9,30])rotate([90,-90,0]){
translate([0,9,3])rotate([0,90,0])cylinder(200,planetscrew/2,planetscrew/2,center=true);
translate([0,12+4,10])rotate([0,90,0])cylinder(200,planetscrew/2,planetscrew/2,center=true);
translate([0,-12+4,8])rotate([0,90,0])cylinder(200,planetscrew/2,planetscrew/2,center=true); 
    }   } }
    color("chocolate")difference(){
        cylinder(50,3,3,center=true);
    cylinder(80,1,1,center=true);
    }
    for (j=[0:120:360]){
    for (i=[-1:2:1]){
        
   rotate([0,0,j])translate([30,6,30])rotate([90,-90,0])stepper();
     
   rotate([0,0,j])translate([30,-9,30])rotate([90,-90,0])planetholder();     
    
    
    rotate([0,0,j])translate([30,16,26])rotate([90,-90,0])stepperholder();    
        rotate([0,0,j])translate([30,0,30])rotate([90,0,0])
        //planetaries();
        cylinder(10,29,29,center=true);//switch with planetary gear
        
        color("red")rotate([0,0,j])translate([40,30*i,5])sphere(10);
    }
}

}
module stepper(){translate([8,0,-4.5]){
    color("grey")cylinder(10,28/2,28/2,center=true);
    translate([10,0,0])cube([11,11,9],center=true);
    color("yellow")translate([-8,0,8])cube([5,2,9],center=true);
    for (i=[-1:2:1]){
        
        translate([0,16*i,5])rotate([0,0,0])
        color("grey")difference(){
        cylinder(1,4,4,center=true);
            cylinder(10,2,2,center=true);
        }        
        
    }
}
}

module planetholder(){difference(){
    color("white")minkowski(){ 
        difference(){
    translate([0,0,0])cylinder(6,22,20,center=true,$fn=3);
            rotate([0,0,0])cylinder(7,9,11,center=true,$fn=6);
               
    
        }
        cylinder(1,2,3,center=true);
}
for (l=[-120:120:120])
    rotate([0,0,l])translate([planetdia/2+sundia/2,0,0])
     //rotate([0,0,(180/planetteeth)*l]) 
        cylinder(200,planetscrew/2,planetscrew/2,center=true);
}
difference(){
color("pink")rotate([0,0,0])translate([-24,0,+8])rotate([0,90,0])
minkowski(){difference(){
    linear_extrude(12)polygon([[-8,18],[9,22],[9,-16],[-2,-13],[-6,2],[0,3]]);
            translate([0,4,19])rotate([0,50,0])cylinder(40,15,15,center=true,$fn=6);
        }
sphere(1,$fn=8);
}

//carriage screw holes
translate([0,9,3])rotate([0,90,0])cylinder(200,planetscrew/2,planetscrew/2,center=true);
translate([0,12+4,10])rotate([0,90,0])cylinder(200,planetscrew/2,planetscrew/2,center=true);
translate([0,-12+4,8])rotate([0,90,0])cylinder(200,planetscrew/2,planetscrew/2,center=true);
}
}

module stepperholder(){
    color("green")minkowski(){
    difference(){
    //cube([40,40,12],center=true)  ;
linear_extrude(10)polygon([[-8,18],[15,22],[19,17],[18,-18],[15,-21],[10,-24],[-20,-15],[-20,18]]);
      translate([12,0,0])cylinder(50,15,15,center=true);  
    }
 sphere(1,$fn=8);
}   
}

module hotend(){
    //Dome nut
}
