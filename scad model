//This is Reprap Pearce, named after my favorite scientist nowadays Joshua Pearce
//The idea is having a big delta printer at very low build cost that prints ok and looks cool.
//Using double coupled 28buj48 steppers and UnoR3 with CNC-shield should do the trick
//Todo:
//Peltier blocks on sides of brakepipe as heatbreak
//thread brakepipe in aproximately 20mm
//Domenut hotend with induction heating


//Input parameters

polelength=1000;
polediameter=10;
buildheigth=2000;
outerradius=500;
ringdia=58;
sunteeth=12;
planetteeth=10;
toothslewrate=0.8;
toothpitch=2;
ringamp=10;
ringfreq=6;
tireprofile=3;
planetscrew=3;
margin=0.1;
screw1=[9,-2,0];
screw2=[-18,-2,0];
motormountscrew1=[11,23,0];
motormountscrew2=[-9,23,0];
motorscrew1=[12,17,0];
motorscrew2=[12,-17,0];
layer=0.2;
screwdetail=20;
threadmargin=0.1;
detail= 12;

planetdia=(ringdia/2-tireprofile*2)*planetteeth/(sunteeth/2+planetteeth);
sundia=(ringdia/2-tireprofile)*sunteeth/(sunteeth/2+planetteeth);
ringteeth=sunteeth*((sunteeth*round(ringdia/planetdia))/sunteeth)-sunteeth;
$fn=detail;
//frame();
//poles();
//towers();
//sliders();
//driverods();
//elevator();
//hotend);
carriage();
//topdeck();
//translate([0,0,-1012])floor();
//planetaries();
//translate([0,140,0])planetholder();
//translate([0,90,0])stepperholder();
//screw(50,0.2);
module screw(d,mar){
    cylinder(25,1.25+mar,1.25+mar,center=false,$fn=d);
    translate([0,0,25])cylinder(5,1.25,0,center=false,$fn=d);
    cylinder(5,8.5/2,0,center=false,$fn=d);
    //1.87/6
   
    for(i=[0:1:7.3*d])
        
        rotate([0,0,(360/(d))*(i)])
    translate([-1.25-mar,0,i*(18.7/6)/d+4])
    rotate([90,-90,0])
    rotate([0,10,0])
    translate([0,0,-(2.5*PI/d)/2])
    linear_extrude(2.5*PI/d)
    polygon([[-1.5/2,0],[0,1.5/2],[1.5/2,0]]);
    }
module planetaries(){for(j=[-10:layer:9.75]){
    color("brown")translate([0,0,0.5*j])linear_extrude(layer)difference(){
     rotate([0,0,360/(sunteeth*2)+2*abs(j)-8])gear(sundia,sunteeth); 
        square([3,6],center=true);
    }
    color("yellow")translate([0,0,0.5*j])linear_extrude(layer)for (i=[-180:60:120])
    rotate([0,0,i-35])translate([planetdia/2+sundia/2+0.5,0,0])difference(){
     rotate([0,0,(180/planetteeth)*i-2*abs(j)])gear(planetdia,planetteeth); 
        circle(planetscrew/2);
    }
        color("cyan")translate([0,0,0.5*j])linear_extrude(layer)
        difference(){
        circle(ringdia/2-tireprofile+0.3);
    rotate([0,0,360/(sunteeth*2)-0.55*abs(j)-0])gear(ringdia-tireprofile*2-toothpitch*1.5+margin*6.8,ringteeth);
    }
    
    for(k=[0:1:360]){
        
   color("blue")rotate([0,90,k])translate([0,ringdia/2-tireprofile+layer,0])
        linear_extrude(20*PI/360*3)
        polygon([[1,tireprofile],[5,1+sin(7*k+30)],[5,-0.5],[-5,-0.5],[-5,1+sin(7*k-30)],[-1,tireprofile]]);
    }  
    }
}
module topdeck(){
    color("yellow")difference(){
    translate([0,0,1000])floor();
     cylinder(3000,200,200,center=true);  
       for (j=[0:120:360]){
        rotate([0,0,j]){
    translate([543,0,1006]) cylinder(30,16,16,center=true);
           translate([540-1,-0,1006])translate(motorscrew1)color("grey")
cylinder(30,1,2,center=true);
translate([540-1,-0,1006])translate(motorscrew2)color("grey")
cylinder(30,1,2,center=true);
        } 
} 
    }
}
module floor(){
    for (j=[0:120:360]){
        rotate([0,0,j])
    linear_extrude(12)polygon([[230.9,-400],[540,-160],[630,-50],[632,0],[630,50],[540,160],[230.9,400],[0,0]]);
}
}
module driverods(){
    for (j=[0:120:360]){ 
 for (i=[-1:2:1]){       
      color("silver")rotate([0,0,j])translate([542,0,500])cylinder(1000,3,3,center=true);
     color("silver")rotate([0,0,j])translate([542,0,0])cylinder(5,6,6,$fn=6,center=true);
     color("silver")rotate([0,0,j])translate([542,0,6])cylinder(5,6,6,$fn=6,center=true);
     color("silver")rotate([0,0,j])translate([542,0,997])cylinder(5,6,6,$fn=6,center=true);
     color("silver")rotate([0,0,j])translate([542,0,991])cylinder(5,6,6,$fn=6,center=true);
     rotate([0,0,j])translate([542,0,1015])rotate([180,0,0])stepper();
     rotate([0,0,j])translate([542,0,-12])rotate([0,0,0])stepper();
     
     rotate([0,0,j])translate([542,0,1002])rotate([180,0,0])difference(){
     cylinder(15,10,10,center=true);
     translate([0,0,-10])cylinder(10,6,6,$fn=6,center=true);
         cube([5,2,30],center=true);
     }
     rotate([0,0,j])translate([542,0,0])difference(){
     cylinder(15,10,10,center=true);
     translate([0,0,-10])cylinder(10,6,6,$fn=6,center=true);
         cube([5,2,30],center=true);
     }
    }  
    rotate([0,0,j])driverodholder();
    }
}

module elevator(){
    for (j=[0:120:360]){ 
 for (i=[-1:2:1]){       
      color("purple")rotate([0,0,j])translate([575,40*i,820])rotate([0,0,-90])linear_extrude(100)polygon([[15,-25],[6,-12],[6,-8],[8,-8],[8,-2],[-8,-2],[-8,-8],[-6,-8],[-6,-12],[-15,-25]]);
    
  rotate([0,0,j])translate([540,0,870])color("beige")difference(){  
    intersection(){
  translate([0,0,0])cube([20,120,100],center=true);
  translate([100,0,0])sphere(120);    
}
        translate([-15,-30,0])rotate([0,90,0])cylinder(30,40,0,center=false);
      translate([-15,30,0])rotate([0,90,0])cylinder(30,40,0,center=false);
      translate([2,0,0])cylinder(200,4,4,center=true);
      translate([2,0,-48])cylinder(6,6,6,$fn=6,center=true);
      translate([2,0,48])cylinder(5,6,6,$fn=6,center=true);
translate([2,15,40])cylinder(30,1.6,1.6,center=true);
translate([2,-15,40])cylinder(30,1.6,1.6,center=true);
translate([2,23,40])rotate([0,90,0])cylinder(30,4,4,center=true);
translate([2,-23,40])rotate([0,90,0])cylinder(30,4,4,center=true);
      }
      
      rotate([0,0,j])translate([542,0,870])difference(){
color("red")rotate([0,0,0])translate([0,30*i,0])sphere(10);
        union(){
rotate([0,45,0])translate([0,30*i-2,0])cylinder(100,0.9,0.9,center=true);  
rotate([0,45,0])translate([0,30*i+2,0])cylinder(100,0.9,0.9,center=true);      
    }
    }
    
  }
    }
}
module sliders(){
    for (j=[0:120:360]){ 
 for (i=[-1:2:1]){       
      color("silver")rotate([0,0,j])translate([575,40*i,-100])rotate([0,0,-90])linear_extrude(1100)polygon([[0,0],[10,0],[10,-10],[6,-10],[6,-8],[8,-8],[8,-2],[-8,-2],[-8,-8],[-6,-8],[-6,-10],[-10,-10],[-10,0]]);
    }  }
}


module towers(){
    for (j=[0:120:360]){ 
 for (i=[-1:2:1]){        
      color("yellow")rotate([0,0,j])translate([600,0,0])cube([50,100,2000],center=true);
    color("yellow")rotate([0,0,j])translate([565,95*i,0])rotate([0,0,i*45])cube([20,140,2000],center=true);
     }  }
}

module poles() {
  for (j=[0:120:360]){
    for (i=[-1:2:1]){    
      color("cyan")rotate([0,30,j])translate([33,30*i,30])cylinder(polelength,8,8,center=false);
    }}  
}
module gear(dia,teeth){
   
     for(i=[0:360/teeth:360]){    
    rotate([0,0,i])polygon([[0,0],
         [dia/2-toothpitch/2*2,+dia*PI/(teeth*4)+toothslewrate/2+dia*PI/(teeth*3)],
         [dia/2-toothpitch/2,dia*PI/(teeth*4)+toothslewrate/2-margin],
         [dia/2+toothpitch/2,dia*PI/(teeth*4)-toothslewrate/2-margin],
         [dia/2+toothpitch/2,-dia*PI/(teeth*4)+toothslewrate/2+margin],
         [dia/2-toothpitch/2,-dia*PI/(teeth*4)-toothslewrate/2+margin],
         [dia/2-toothpitch/2*2,-dia*PI/(teeth*4)-toothslewrate/2-dia*PI/(teeth*3)]]);
     }    
    }

module carriage(){
    color("silver")difference(){
        cylinder(10,50,50,center=true);
    cylinder(80,2,2,center=true);
        for (k=[0:120:350]){
        rotate([0,0,k+15])translate([26,26,2])rotate([-30,30,-3])cylinder(40,5,14,center=true);
            minkowski(){
            rotate([0,0,k])translate([30,0,30])rotate([90,0,0])cylinder(6,30,30,center=true,$fn=50);
            sphere(3);}//room for planetary gear
            //planetaries();
        }
    //carriage screw holes
        for (m=[0:120:360]){rotate([0,0,m])translate([30,-9,-6])rotate([0,0,0]){
translate(screw1)rotate([0,0,0])
           screw(screwdetail,threadmargin); 
translate(screw2)rotate([0,0,0])
    screw(screwdetail,threadmargin);         
translate(motormountscrew1)rotate([0,0,0])
     screw(screwdetail,threadmargin);       
    
translate(motormountscrew2)rotate([0,0,0])
     screw(screwdetail,threadmargin);       
     }
for (l=[0:120:360]){
    for (m=[-1:2:1]){     
rotate([0,45,l])translate([25,30*m-2,15])cylinder(100,0.9,0.9,center=true);  
rotate([0,45,l])translate([25,30*m+2,15])cylinder(100,0.9,0.9,center=true);      
   }}
    }   } 
    for (j=[0:120:360]){
    for (i=[-1:2:1]){
        
   //rotate([0,0,j])translate([30,6,30])rotate([90,-90,0])stepper();
     
   rotate([0,0,j])planetholder();     
    
    
   rotate([0,0,j])stepperholder();    
        //rotate([0,0,j])translate([30,0,30])rotate([90,0,0])
        //planetaries();
        //cylinder(10,29,29,center=true);//switch with planetary gear
        
        difference(){
color("red")rotate([0,0,j])translate([40,30*i,5])sphere(10,$fn=40);
        union(){
rotate([0,45,j])translate([25,30*i-2,15])cylinder(100,0.9,0.9,center=true);  
rotate([0,45,j])translate([25,30*i+2,15])cylinder(100,0.9,0.9,center=true);      
    }
    }
    }
}

}
module stepper(){translate([8,0,-4.5]){
    color("grey")cylinder(10,28/2,28/2,center=true);
    translate([10,0,0])cube([11,11,9],center=true);
    color("yellow")translate([-8,0,8])cube([5,2,9],center=true);
    for (i=[-1:2:1]){
        
        translate([0,16*i,5])rotate([0,0,0])
        color("grey")difference(){
        cylinder(1,4,4,center=true);
            cylinder(10,2,2,center=true);
        }        
        
    }
}
}

module planetholder(){
//planetdia/2+sundia/2+0.5
    translate([30,-9,30])rotate([90,-90,0]){
difference(){
     translate([0,0,1])color("white")minkowski(){ 
        difference(){
   cylinder(6,22,20,center=true,$fn=3);
            rotate([0,0,0])cylinder(7,9,11,center=true,$fn=6);
               
    
        }
        cylinder(2,2,3,center=true);
}
for (l=[-120:120:120])
    rotate([0,0,l])translate([planetdia/2+sundia/2+0.5,0,0])
     //rotate([0,0,(180/planetteeth)*l]) 
        cylinder(200,planetscrew/2,planetscrew/2,center=true);
}
difference(){
color("pink")rotate([0,0,0])translate([-25,0,+8])rotate([0,90,0])
minkowski(){difference(){
    linear_extrude(9)polygon([[-4,17],[8,21],[8,-15],[-0,-12],[-1,2],[0,3]]);
            translate([0,4,19])rotate([0,50,0])cylinder(40,14,17,center=true,$fn=6);
        }
cylinder(4,3,1,$fn=5);
}

//carriage screw holes
translate([21-9,-5-6,-5])screw(screwdetail,threadmargin);
translate([27+12,-4-7,-5])screw(screwdetail,threadmargin);
}}
//translate([21-9,-5-6,-8])screw(screwdetail,threadmargin);
//translate([27+12,-4-7,-8])screw(screwdetail,threadmargin);
}

module stepperholder(){
    translate([30,17,26])rotate([90,-90,0])
    difference(){
union(){
    color("green")minkowski(){
    difference(){
linear_extrude(10)polygon([[-8,14],[15,22],[19,17],[18,-18],[15,-21],[10,-24],[-20,-10],[-20,8]]);
      translate([12,0,0])cylinder(50,15,15,center=true,$fn=50);     
    }
 sphere(1,$fn=8);
} 
color("cyan")rotate([0,0,0])translate([-21,4,+8])rotate([0,90,0])
minkowski(){
    linear_extrude(4)polygon([[0,12],[8,7],[8,-16],[0,-16]]);

        cylinder(2,3,1,center=false);
       } 
}
translate([-20,-0,25]){
translate(motormountscrew1)rotate([0,90,0])cylinder(40,planetscrew/2,planetscrew/2,center=true);
translate(motormountscrew2)rotate([0,90,0])cylinder(40,planetscrew/2,planetscrew/2,center=true);

    }
    
translate([21,14,-5])color("grey")screw(screwdetail,threadmargin);
translate([41,14,-5])color("grey")screw(screwdetail,threadmargin); 
    
    //}
}
//translate([21,14,-8])color("grey")screw(screwdetail,threadmargin);
//translate([41,14,-8])color("grey")screw(screwdetail,threadmargin); 
}
module driverodholder(){translate([542+20,0,-12-12])rotate([0,0,180])difference(){
    color("cyan")minkowski(){
    difference(){
        intersection(){
translate([0,0,-40])linear_extrude(50)polygon([[-8,18],[15,22],[19,17],[18,-18],[15,-21],[10,-24],[-20,-15],[-20,18]]);
        translate([12,30,-12])rotate([90,0,0])linear_extrude(50)polygon([[-8,23],[15,23],[11,23],[-15,-24],[-20,-24],[-24,-35],[-24,15]]);
        }
      translate([12,0,0])cylinder(90,15,15,center=true);  
     translate([12,0,0])cube([40,15,90],center=true);    
    }
 sphere(1,$fn=8);
}   

translate([-5,-0,-10]){
translate(motormountscrew1)rotate([0,90,0])cylinder(20,planetscrew/4,planetscrew,center=true);
translate(motormountscrew2)rotate([0,90,0])cylinder(20,planetscrew/4,planetscrew,center=true);
translate(motormountscrew3)rotate([0,90,0])cylinder(20,planetscrew/4,planetscrew,center=true);
translate(motormountscrew4)rotate([0,90,0])cylinder(20,planetscrew/4,planetscrew,center=true);
    }
    
    translate([0,-0,9]){
translate(motormountscrew1)rotate([0,90,0])cylinder(30,planetscrew/4,planetscrew,center=true);
translate(motormountscrew2)rotate([0,90,0])cylinder(30,planetscrew/4,planetscrew,center=true);
translate(motormountscrew3)rotate([0,90,0])cylinder(30,planetscrew/4,planetscrew,center=true);
translate(motormountscrew4)rotate([0,90,0])cylinder(30,planetscrew/4,planetscrew,center=true);
    }
    
translate([1,-0,0])translate(motorscrew1)color("grey")
cylinder(20,1,2,center=true);
translate([1,-0,0])translate(motorscrew2)color("grey")
cylinder(20,1,2,center=true);       

}

}
module hotend(){
    //Dome nut
} 

echo("Sun diameter is ");
echo(sundia);
echo("and planet diameter is ");
echo(planetdia);
echo("and ring teeth is ");
echo(ringteeth);
