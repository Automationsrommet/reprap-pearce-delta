//This is Reprap Pearce, named after my favorite scientist nowadays Joshua Pearce
//The idea is having a big delta printer at very low build cost that prints ok and looks cool.
//Using double coupled 28buj48 steppers and UnoR3 with CNC-shield should do the trick
//Todo:
//Peltier blocks on sides of brakepipe as heatbreak
//thread brakepipe in aproximately 20mm
//Domenut hotend with induction heating


//Input parameters

polelength=1000;
polediameter=10;
buildheigth=2000;
outerradius=500;
ringdia=58;
sunteeth=12;
planetteeth=10;
toothslewrate=0.8;
toothpitch=2;
ringamp=10;
ringfreq=6;
tireprofile=3;
planetscrew=4;
margin=0.1;
screw1=[-30,18,2];
screw2=[-30,17,8];
screw3=[-30,-10,9];
screw4=[-30,-10,2];
motormountscrew1=[-0,-13,-17];
motormountscrew2=[-0,-13,-23];
motormountscrew3=[-0,13,-17];
motormountscrew4=[-0,13,-23];
motorscrew1=[11,16,5];
motorscrew2=[11,-16,5];

detail= 12;

planetdia=(ringdia/2-tireprofile*2)*planetteeth/(sunteeth/2+planetteeth);
sundia=(ringdia/2-tireprofile)*sunteeth/(sunteeth/2+planetteeth);
ringteeth=sunteeth*((sunteeth*round(ringdia/planetdia))/sunteeth)-sunteeth;
$fn=detail;
//frame();
poles();
towers();
sliders();
driverods();
elevator();
//hotend);
carriage();
//planetaries();

module driverods(){
    for (j=[0:120:360]){ 
 for (i=[-1:2:1]){       
      color("silver")rotate([0,0,j])translate([542,0,500])cylinder(1000,3,3,center=true);
     color("silver")rotate([0,0,j])translate([542,0,0])cylinder(5,6,6,$fn=6,center=true);
     color("silver")rotate([0,0,j])translate([542,0,6])cylinder(5,6,6,$fn=6,center=true);
     color("silver")rotate([0,0,j])translate([542,0,997])cylinder(5,6,6,$fn=6,center=true);
     color("silver")rotate([0,0,j])translate([542,0,991])cylinder(5,6,6,$fn=6,center=true);
     rotate([0,0,j])translate([542,0,1010])rotate([180,0,0])stepper();
     rotate([0,0,j])translate([542,0,-10])rotate([0,0,0])stepper();
     rotate([0,0,j])translate([542,0,1002])difference(){
     cylinder(15,10,10,center=true);
     translate([0,0,-10])cylinder(10,6,6,$fn=6,center=true);
         cube([5,2,30],center=true);
     }
    }  }
}

module elevator(){
    for (j=[0:120:360]){ 
 for (i=[-1:2:1]){       
      color("purple")rotate([0,0,j])translate([575,40*i,820])rotate([0,0,-90])linear_extrude(100)polygon([[15,-25],[6,-12],[6,-8],[8,-8],[8,-2],[-8,-2],[-8,-8],[-6,-8],[-6,-12],[-15,-25]]);
    
  rotate([0,0,j])translate([540,0,870])color("beige")difference(){  
    intersection(){
  translate([0,0,0])cube([20,120,100],center=true);
  translate([100,0,0])sphere(120);    
}
        translate([-15,-30,0])rotate([0,90,0])cylinder(30,40,0,center=false);
      translate([-15,30,0])rotate([0,90,0])cylinder(30,40,0,center=false);
      translate([2,0,0])cylinder(200,4,4,center=true);
      translate([2,0,-48])cylinder(6,6,6,$fn=6,center=true);
      translate([2,0,48])cylinder(5,6,6,$fn=6,center=true);
translate([2,15,40])cylinder(30,1.6,1.6,center=true);
translate([2,-15,40])cylinder(30,1.6,1.6,center=true);
translate([2,23,40])rotate([0,90,0])cylinder(30,4,4,center=true);
translate([2,-23,40])rotate([0,90,0])cylinder(30,4,4,center=true);
      }
      
      rotate([0,0,j])translate([542,0,870])difference(){
color("red")rotate([0,0,0])translate([0,30*i,0])sphere(10);
        union(){
rotate([0,45,0])translate([0,30*i-2,0])cylinder(100,0.9,0.9,center=true);  
rotate([0,45,0])translate([0,30*i+2,0])cylinder(100,0.9,0.9,center=true);      
    }
    }
    
  }
    }
}
module sliders(){
    for (j=[0:120:360]){ 
 for (i=[-1:2:1]){       
      color("silver")rotate([0,0,j])translate([575,40*i,-100])rotate([0,0,-90])linear_extrude(1100)polygon([[0,0],[10,0],[10,-10],[6,-10],[6,-8],[8,-8],[8,-2],[-8,-2],[-8,-8],[-6,-8],[-6,-10],[-10,-10],[-10,0]]);
    }  }
}
module planetaries(){for(j=[-10:0.5:9.5]){
    color("brown")translate([0,0,0.5*j])linear_extrude(0.5)difference(){
     rotate([0,0,360/(sunteeth*2)+2*abs(j)])gear(sundia,sunteeth); 
        square([3,6],center=true);
    }
    color("yellow")translate([0,0,0.5*j])linear_extrude(0.5)for (i=[-120:120:120])
    rotate([0,0,i-30])translate([planetdia/2+sundia/2,0,0])difference(){
     rotate([0,0,(180/planetteeth)*i-2*abs(j)])gear(planetdia,planetteeth); 
        circle(planetscrew/2);
    }
        color("cyan")translate([0,0,0.5*j])linear_extrude(0.5)difference(){
        circle(ringdia/2-tireprofile+0.4);
    rotate([0,0,360/(sunteeth*2)-2*abs(j)])gear(ringdia-tireprofile*2-toothpitch*1.5+margin,ringteeth);
    }
    //rotate_extrude(1)
    for(k=[0:1:360]){
   color("blue")rotate([0,90,k])translate([0,ringdia/2-tireprofile+0.5,0])polygon([[1,tireprofile],[5,1+sin(7*k+30)],[5,0],[-5,0],[-5,1+sin(7*k-30)],[-1,tireprofile]]);
    }  
    }
}
module towers(){
    for (j=[0:120:360]){ 
 for (i=[-1:2:1]){        
      color("yellow")rotate([0,0,j])translate([600,0,0])cube([50,100,2000],center=true);
    color("yellow")rotate([0,0,j])translate([565,95*i,0])rotate([0,0,i*45])cube([20,140,2000],center=true);
     }  }
}

module poles() {
  for (j=[0:120:360]){
    for (i=[-1:2:1]){    
      color("cyan")rotate([0,30,j])translate([33,30*i,30])cylinder(polelength,8,8,center=false);
    }}  
}
module gear(dia,teeth){
   
     for(i=[0:360/teeth:360]){    
    rotate([0,0,i])polygon([[0,0],
         [dia/2-toothpitch/2*2,+dia*PI/(teeth*4)+toothslewrate/2+dia*PI/(teeth*3)],
         [dia/2-toothpitch/2,dia*PI/(teeth*4)+toothslewrate/2-margin],
         [dia/2+toothpitch/2,dia*PI/(teeth*4)-toothslewrate/2-margin],
         [dia/2+toothpitch/2,-dia*PI/(teeth*4)+toothslewrate/2+margin],
         [dia/2-toothpitch/2,-dia*PI/(teeth*4)-toothslewrate/2+margin],
         [dia/2-toothpitch/2*2,-dia*PI/(teeth*4)-toothslewrate/2-dia*PI/(teeth*3)]]);
     }    
    }

module carriage(){
    color("silver")difference(){
        cylinder(10,50,50,center=true);
    cylinder(80,2,2,center=true);
        for (k=[0:120:360]){
        rotate([0,0,k+15])translate([26,26,2])rotate([-30,30,-3])cylinder(40,5,14,center=true);
            rotate([0,0,k])translate([30,0,30])rotate([90,0,0])cylinder(10,30,30,center=true);//room for planetary gear
        }
    //carriage screw holes
        for (m=[0:120:360]){rotate([0,0,m])translate([30,-9,30])rotate([90,-90,0]){
translate(screw1)rotate([0,90,0])cylinder(200,planetscrew/2,planetscrew/2,center=true);
translate(screw2)rotate([0,90,0])cylinder(200,planetscrew/2,planetscrew/2,center=true);
translate(screw3)rotate([0,90,0])cylinder(200,planetscrew/2,planetscrew/2,center=true); 
translate(screw4)rotate([0,90,0])cylinder(200,planetscrew/2,planetscrew/2,center=true);
translate(motormountscrew1)rotate([0,90,0])cylinder(200,planetscrew/2,planetscrew/2,center=true);
translate(motormountscrew2)rotate([0,90,0])cylinder(200,planetscrew/2,planetscrew/2,center=true);
translate(motormountscrew3)rotate([0,90,0])cylinder(200,planetscrew/2,planetscrew/2,center=true);
translate(motormountscrew4)rotate([0,90,0])cylinder(200,planetscrew/2,planetscrew/2,center=true);
     }
for (l=[0:120:360]){
    for (m=[-1:2:1]){     
rotate([0,45,l])translate([25,30*m-2,15])cylinder(100,0.9,0.9,center=true);  
rotate([0,45,l])translate([25,30*m+2,15])cylinder(100,0.9,0.9,center=true);      
   }}
    }   } //}
    color("chocolate")difference(){
        cylinder(50,3,3,center=true);
    cylinder(80,1,1,center=true);
    }
    for (j=[0:120:360]){
    for (i=[-1:2:1]){
        
   rotate([0,0,j])translate([30,6,30])rotate([90,-90,0])stepper();
     
   rotate([0,0,j])translate([30,-9,30])rotate([90,-90,0])planetholder();     
    
    
    rotate([0,0,j])translate([30,16,26])rotate([90,-90,0])stepperholder();    
        rotate([0,0,j])translate([30,0,30])rotate([90,0,0])
        //planetaries();
        cylinder(10,29,29,center=true);//switch with planetary gear
        
        difference(){
color("red")rotate([0,0,j])translate([40,30*i,5])sphere(10);
        union(){
rotate([0,45,j])translate([25,30*i-2,15])cylinder(100,0.9,0.9,center=true);  
rotate([0,45,j])translate([25,30*i+2,15])cylinder(100,0.9,0.9,center=true);      
    }
    }
    }
}

}
module stepper(){translate([8,0,-4.5]){
    color("grey")cylinder(10,28/2,28/2,center=true);
    translate([10,0,0])cube([11,11,9],center=true);
    color("yellow")translate([-8,0,8])cube([5,2,9],center=true);
    for (i=[-1:2:1]){
        
        translate([0,16*i,5])rotate([0,0,0])
        color("grey")difference(){
        cylinder(1,4,4,center=true);
            cylinder(10,2,2,center=true);
        }        
        
    }
}
}

module planetholder(){difference(){
    color("white")minkowski(){ 
        difference(){
    translate([0,0,0])cylinder(6,22,20,center=true,$fn=3);
            rotate([0,0,0])cylinder(7,9,11,center=true,$fn=6);
               
    
        }
        cylinder(1,2,3,center=true);
}
for (l=[-120:120:120])
    rotate([0,0,l])translate([planetdia/2+sundia/2,0,0])
     //rotate([0,0,(180/planetteeth)*l]) 
        cylinder(200,planetscrew/2,planetscrew/2,center=true);
}
difference(){
color("pink")rotate([0,0,0])translate([-24,0,+8])rotate([0,90,0])
minkowski(){difference(){
    linear_extrude(12)polygon([[-8,18],[9,22],[9,-16],[-2,-13],[-6,2],[0,3]]);
            translate([0,4,19])rotate([0,50,0])cylinder(40,15,15,center=true,$fn=6);
        }
sphere(1,$fn=8);
}

//carriage screw holes
translate(screw1)rotate([0,90,0])cylinder(30,planetscrew/2,planetscrew/2,center=true);
translate(screw2)rotate([0,90,0])cylinder(30,planetscrew/2,planetscrew/2,center=true);
translate(screw3)rotate([0,90,0])cylinder(30,planetscrew/2,planetscrew/2,center=true);
translate(screw4)rotate([0,90,0])cylinder(30,planetscrew/2,planetscrew/2,center=true);
}
}

module stepperholder(){difference(){
    color("green")minkowski(){
    difference(){
linear_extrude(10)polygon([[-8,18],[15,22],[19,17],[18,-18],[15,-21],[10,-24],[-20,-15],[-20,18]]);
      translate([12,0,0])cylinder(50,15,15,center=true);     
    }
 sphere(1,$fn=8);
}   
//}
translate([-20,-0,25]){
translate(motormountscrew1)rotate([0,90,0])cylinder(40,planetscrew/2,planetscrew/2,center=true);
translate(motormountscrew2)rotate([0,90,0])cylinder(40,planetscrew/2,planetscrew/2,center=true);
translate(motormountscrew3)rotate([0,90,0])cylinder(40,planetscrew/2,planetscrew/2,center=true);
translate(motormountscrew4)rotate([0,90,0])cylinder(40,planetscrew/2,planetscrew/2,center=true);
    }
    
translate(motorscrew1)color("grey")
cylinder(30,1,2,center=true);
translate(motorscrew2)color("grey")
cylinder(30,1,2,center=true);       
       
    
    //}
}
}
module hotend(){
    //Dome nut
} 

echo("Sun diameter is ");
echo(sundia);
echo("and planet diameter is ");
echo(planetdia);
echo("and ring teeth is ");
echo(ringteeth);
